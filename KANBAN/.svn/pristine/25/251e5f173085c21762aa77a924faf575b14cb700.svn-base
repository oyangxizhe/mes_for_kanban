using System;
using System.Collections;
using System.Configuration;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.HtmlControls;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Xml.Linq;
using System.Data.SqlClient;
using CMES;
using System.IO;
using System.Diagnostics;
using System.Collections.Generic;
using System.Text ;

namespace CMES
{
    public class CKANBAN
    {
        basec bc = new basec();
        StringBuilder sqb=new StringBuilder();
        SendMail sendmail=new SendMail ();
        #region nature
        private string _ErrowInfo;
        public string ErrowInfo
        {

            set { _ErrowInfo = value; }
            get { return _ErrowInfo; }

        }
        private string _USID;
        public string USID
        {
            set { _USID = value; }
            get { return _USID; }

        }
        private string _UNAME;
        public string UNAME
        {
            set { _UNAME = value; }
            get { return _UNAME; }

        }
        private string _EMID;
        public string EMID
        {
            set { _EMID = value; }
            get { return _EMID; }

        }
        private string _GEID;
        public string GEID
        {
            set { _GEID = value; }
            get { return _GEID; }

        }
        private string _ENAME;
        public string ENAME
        {
            set { _ENAME = value; }
            get { return _ENAME; }

        }
        private string _DEPART;
        public string DEPART
        {
            set { _DEPART = value; }
            get { return _DEPART; }

        }
        private string _USER_GROUP;
        public string USER_GROUP
        {
            set { _USER_GROUP = value; }
            get { return _USER_GROUP; }

        }
        private string _MAKERID;
        public string MAKERID
        {
            set { _MAKERID = value; }
            get { return _MAKERID; }

        }
        private string _PWD;
        public string PWD
        {
            set { _PWD = value; }
            get { return _PWD; }

        }
        private bool _IFExecutionSUCCESS;
        public bool IFExecution_SUCCESS
        {
            set { _IFExecutionSUCCESS = value; }
            get { return _IFExecutionSUCCESS; }

        }
        private string _sql;
        public string sql
        {
            set { _sql = value; }
            get { return _sql; }

        }
        private string _sqlo;
        public string sqlo
        {
            set { _sqlo = value; }
            get { return _sqlo; }

        }
        private string _sqlt;
        public string sqlt
        {
            set { _sqlt = value; }
            get { return _sqlt; }

        }
        private string _sqlth;
        public string sqlth
        {
            set { _sqlth = value; }
            get { return _sqlth; }

        }
        private string _sqlf;
        public string sqlf
        {
            set { _sqlf = value; }
            get { return _sqlf; }

        }
        private string _sqlfi;
        public string sqlfi
        {
            set { _sqlfi = value; }
            get { return _sqlfi; }

        }
        #endregion
        #region sql
        string setsql = @"
DECLARE @Tmptable TABLE 
(錯誤訊息  nvarchar(20),
機台編號  Varchar(5),
區域  Varchar(3),
執行單號  Varchar(20),
總生產量  int,
總不良數  int, 
已做量  int,  
應做量  int, 
生產進度 Varchar(10))
insert into 
@Tmptable execute MES2_ModuleByOrderFillRate_sp '','ALL'   
Select substring(drma_exeno,2,2) as 試模單,
convert(int,replace(生產進度,'%','')) as 生產進度數值,
a.* ,b.*  FROM [MES2].[dbo].[dr_machine] a left join 
(select * from @Tmptable)  as b on  drma_machine=b.機台編號 
where drma_machine<>'66' and drma_status ='Y' 

";
        string setsqlo = @"

";


        string setsqlt = @"


";
        string setsqlth = @""
;



        #endregion
        public CKANBAN()
        {
            sql = setsql;
            sqlo = setsqlo;
            sqlt = setsqlt;
            sqlth = setsqlth;
        }
        public DataTable RETURN_BUILDING_DT(string SQLCONN)
        {
            DataTable dt = new DataTable();
            dt.Columns.Add("BUILD_NO", typeof(string));
            dt.Columns.Add("BUILD_NAME", typeof(string));
            DataTable dtbuild = bc.getdt("select distinct(drma_building)  from dr_machine",SQLCONN);
            if (dtbuild.Rows.Count > 0)
            {

                foreach (DataRow dr2 in dtbuild.Rows)
                {
                    DataRow dr3 = dt.NewRow();
                    dr3["BUILD_NO"] = dr2["drma_building"].ToString();
                    dr3["BUILD_NAME"] = dr2["drma_building"].ToString()+"棟";
                    dt.Rows.Add(dr3);
                }
                DataRow dr4 = dt.NewRow();
                dr4["BUILD_NO"] = "all";//選擇A,B棟或是全部棟別
                dr4["BUILD_NAME"] = "all";//選擇A,B棟或是全部棟別
                dt.Rows.Add(dr4);


            }
            return dt;
        }
        public string  error_info(string aspx,string IP,string START_TIME)
        {
                string b="";
                sqb = new StringBuilder();
                sqb.AppendFormat("error come from "+aspx+" client ip {0}",IP);
                sqb.AppendFormat(" 登陸時間 {0} ", START_TIME);
                sqb.AppendFormat(" 中斷運行時間 {0} ", DateTime.Now.ToString("yyyy/MM/dd HH:mm:ss").Replace("-", "/"));
                if (!string.IsNullOrEmpty(START_TIME))
                {
                    DateTime date1 = DateTime.Now;
                    DateTime date2 = DateTime.Parse(START_TIME);
                    TimeSpan ts = date1 - date2;
                    sqb.AppendFormat(" 持續運行時間 {0} ", ts.Days.ToString() + "天" + ts.Hours.ToString() + "小時" + 
                        ts.Minutes.ToString() + "分。");
                    sqb.AppendFormat(" 出現此MAIL不表示看板真的中斷運行，只是參考有這個可能 ");
                }
                b = sqb.ToString();
                return b;
            }
    }
}
